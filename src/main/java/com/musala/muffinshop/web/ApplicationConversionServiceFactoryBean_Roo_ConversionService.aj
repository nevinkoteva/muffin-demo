// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.musala.muffinshop.web;

import com.musala.muffinshop.domain.Base;
import com.musala.muffinshop.domain.Icing;
import com.musala.muffinshop.domain.Muffin;
import com.musala.muffinshop.domain.MuffinOrder;
import com.musala.muffinshop.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Base, String> ApplicationConversionServiceFactoryBean.getBaseToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.musala.muffinshop.domain.Base, java.lang.String>() {
            public String convert(Base base) {
                return new StringBuilder().append(base.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Base> ApplicationConversionServiceFactoryBean.getIdToBaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.musala.muffinshop.domain.Base>() {
            public com.musala.muffinshop.domain.Base convert(java.lang.Long id) {
                return Base.findBase(id);
            }
        };
    }
    
    public Converter<String, Base> ApplicationConversionServiceFactoryBean.getStringToBaseConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.musala.muffinshop.domain.Base>() {
            public com.musala.muffinshop.domain.Base convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Base.class);
            }
        };
    }
    
    public Converter<Icing, String> ApplicationConversionServiceFactoryBean.getIcingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.musala.muffinshop.domain.Icing, java.lang.String>() {
            public String convert(Icing icing) {
                return new StringBuilder().append(icing.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Icing> ApplicationConversionServiceFactoryBean.getIdToIcingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.musala.muffinshop.domain.Icing>() {
            public com.musala.muffinshop.domain.Icing convert(java.lang.Long id) {
                return Icing.findIcing(id);
            }
        };
    }
    
    public Converter<String, Icing> ApplicationConversionServiceFactoryBean.getStringToIcingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.musala.muffinshop.domain.Icing>() {
            public com.musala.muffinshop.domain.Icing convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Icing.class);
            }
        };
    }
    
    public Converter<Muffin, String> ApplicationConversionServiceFactoryBean.getMuffinToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.musala.muffinshop.domain.Muffin, java.lang.String>() {
            public String convert(Muffin muffin) {
                return new StringBuilder().append(muffin.getName()).append(' ').append(muffin.getPrice()).toString();
            }
        };
    }
    
    public Converter<Long, Muffin> ApplicationConversionServiceFactoryBean.getIdToMuffinConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.musala.muffinshop.domain.Muffin>() {
            public com.musala.muffinshop.domain.Muffin convert(java.lang.Long id) {
                return Muffin.findMuffin(id);
            }
        };
    }
    
    public Converter<String, Muffin> ApplicationConversionServiceFactoryBean.getStringToMuffinConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.musala.muffinshop.domain.Muffin>() {
            public com.musala.muffinshop.domain.Muffin convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Muffin.class);
            }
        };
    }
    
    public Converter<MuffinOrder, String> ApplicationConversionServiceFactoryBean.getMuffinOrderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.musala.muffinshop.domain.MuffinOrder, java.lang.String>() {
            public String convert(MuffinOrder muffinOrder) {
                return new StringBuilder().append(muffinOrder.getName()).append(' ').append(muffinOrder.getAddress()).append(' ').append(muffinOrder.getTotal()).append(' ').append(muffinOrder.getDeliveryDate()).toString();
            }
        };
    }
    
    public Converter<Long, MuffinOrder> ApplicationConversionServiceFactoryBean.getIdToMuffinOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.musala.muffinshop.domain.MuffinOrder>() {
            public com.musala.muffinshop.domain.MuffinOrder convert(java.lang.Long id) {
                return MuffinOrder.findMuffinOrder(id);
            }
        };
    }
    
    public Converter<String, MuffinOrder> ApplicationConversionServiceFactoryBean.getStringToMuffinOrderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.musala.muffinshop.domain.MuffinOrder>() {
            public com.musala.muffinshop.domain.MuffinOrder convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), MuffinOrder.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getBaseToStringConverter());
        registry.addConverter(getIdToBaseConverter());
        registry.addConverter(getStringToBaseConverter());
        registry.addConverter(getIcingToStringConverter());
        registry.addConverter(getIdToIcingConverter());
        registry.addConverter(getStringToIcingConverter());
        registry.addConverter(getMuffinToStringConverter());
        registry.addConverter(getIdToMuffinConverter());
        registry.addConverter(getStringToMuffinConverter());
        registry.addConverter(getMuffinOrderToStringConverter());
        registry.addConverter(getIdToMuffinOrderConverter());
        registry.addConverter(getStringToMuffinOrderConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
